# Generated by Django 5.0.6 on 2024-07-21 13:35

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('iso2', models.CharField(max_length=2)),
                ('iso3', models.CharField(max_length=3)),
                ('flag', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['country'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_code', models.CharField(max_length=100)),
                ('sector_label', models.CharField(max_length=255)),
                ('activity_code', models.CharField(max_length=100)),
                ('activity_label', models.CharField(max_length=255)),
                ('product_code', models.CharField(max_length=100)),
                ('product_label', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['product_label'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('chef_lieu', models.CharField(max_length=150, null=True)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('enterprise', 'Enterprise'), ('individual', 'Individual')], max_length=20)),
                ('manager_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nrc', models.CharField(blank=True, max_length=100, null=True)),
                ('nat_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('total_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.country')),
                ('product', models.ManyToManyField(blank=True, null=True, to='transactions.product')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.province')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('manager_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nrc', models.CharField(blank=True, max_length=100, null=True)),
                ('nat_id', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('initial_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('country', models.ForeignKey(limit_choices_to={'country': 'Congo (Kinshasa)'}, on_delete=django.db.models.deletion.PROTECT, to='transactions.country')),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='transactions.customuser')),
            ],
            options={
                'verbose_name': 'Producer',
                'verbose_name_plural': 'Producers',
            },
        ),
        migrations.CreateModel(
            name='ProducerClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.client')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.producer')),
            ],
            options={
                'verbose_name': 'Producteur-Client',
                'verbose_name_plural': 'Producteurs-Clients',
            },
        ),
        migrations.AddField(
            model_name='producer',
            name='clients',
            field=models.ManyToManyField(related_name='clients', through='transactions.ProducerClient', to='transactions.client'),
        ),
        migrations.AddField(
            model_name='producer',
            name='product',
            field=models.ManyToManyField(to='transactions.product'),
        ),
        migrations.AddField(
            model_name='producer',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.province'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('enterprise', 'Enterprise'), ('individual', 'Individual')], max_length=20)),
                ('manager_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nrc', models.CharField(blank=True, max_length=100, null=True)),
                ('nat_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.country')),
                ('product', models.ManyToManyField(blank=True, null=True, to='transactions.product')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.province')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='ProducerSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.producer')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.supplier')),
            ],
            options={
                'verbose_name': 'Producteur-Fournisseur',
                'verbose_name_plural': 'Producteurs-Fournisseurs',
            },
        ),
        migrations.AddField(
            model_name='producer',
            name='suppliers',
            field=models.ManyToManyField(related_name='suppliers', through='transactions.ProducerSupplier', to='transactions.supplier'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('purchase', 'Achat'), ('sale', 'Vente')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_of_measure', models.CharField(choices=[('kg', 'Kilogramme'), ('g', 'Gramme'), ('lb', 'Livre'), ('l', 'Litre'), ('ml', 'Millilitre'), ('m3', 'Mètre cube'), ('unit', 'Unité'), ('box', 'Boîte'), ('piece', 'Pièce'), ('m', 'Mètre'), ('cm', 'Centimètre'), ('mm', 'Millimètre'), ('inch', 'Pouce'), ('ft', 'Pied'), ('yd', 'Yard'), ('tonne', 'Tonne'), ('ton', 'Ton'), ('kWh', 'Kilowatt-heure'), ('Wh', 'Watt-heure'), ('other', 'Autre')], default='unit', max_length=10)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('CDF', 'Congolese Franc'), ('EUR', 'Euro')], default='CDF', max_length=3)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transactions.client')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.producer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transactions.supplier')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='UniqueSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_code', models.CharField(max_length=50, unique=True)),
                ('sector_label', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
                'ordering': ['sector_label'],
                'unique_together': {('sector_code', 'sector_label')},
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='sector_label',
            field=models.ManyToManyField(blank=True, null=True, to='transactions.uniquesector'),
        ),
        migrations.AddField(
            model_name='producer',
            name='sector_label',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transactions.uniquesector'),
        ),
        migrations.AddField(
            model_name='client',
            name='sector_label',
            field=models.ManyToManyField(blank=True, null=True, to='transactions.uniquesector'),
        ),
    ]
