"""
Django settings for DRC_TRANSACTIONS project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ma++slyl&gx4(x#$@&11ocff6104rk*-e2+lem*5@pv#)2sah6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #Apps
    'transactions',
    #New Externals apps
    'rest_framework',
    'corsheaders',
    'django.contrib.sites',
    "django_extensions",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_htmx',
    'django_tables2',
    'widget_tweaks',
    'crispy_forms',
    'crispy_bootstrap4',
    'bootstrap4',
    'django_filters',
    'chartjs',
    # 'compressor',
    'crispy_tailwind',
    'django.contrib.humanize',
    'admin_tools',
    'admin_tools.theming',
    'admin_tools.menu',
    'admin_tools.dashboard',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #New middleware
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'allauth.account.middleware.AccountMiddleware', 
    "django_htmx.middleware.HtmxMiddleware",
]

ROOT_URLCONF = 'DRC_TRANSACTIONS.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR /  'DRC_TRANSACTIONS' / 'templates'],
        # 'APP_DIRS': True,
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Ajoutez cette ligne
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'transactions.context_processors.header_context',
            ],
            'loaders': [
                'admin_tools.template_loaders.Loader',  # Ajoutez cette ligne
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'DRC_TRANSACTIONS.wsgi.application'

AUTH_USER_MODEL = 'transactions.CustomUser'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#RESTFRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.AllowAny',  # Permettre à tout le monde d'accéder
        'rest_framework.permissions.IsAuthenticated',  # Changer AllowAny à IsAuthenticated
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
}

# Spécifiez le backend d'authentification
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

CRISPY_TEMPLATE_PACK = 'bootstrap4'

SITE_ID = 1

#URL de demarrage
LOGIN_URL = '/accounts/login/'

# Configuration de Allauth
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
# LOGIN_REDIRECT_URL = 'transactions:dashboard'

LOGIN_REDIRECT_URL = '/redirect/'  # Mettez à jour cela pour qu'il pointe vers la vue de redirection
LOGOUT_REDIRECT_URL = '/accounts/login/'

ACCOUNT_EMAIL_VERIFICATION = "none"  # Désactiver la vérification par email
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # ou "optional" selon vos besoins
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1
# ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN = 180
# ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
# ACCOUNT_LOGIN_TEMPLATE = 'account/login.html'

# ACCOUNT_RATE_LIMITS = {
#     'login_failed': (5, 300),  # Example values; adjust as per your needs
#     'confirm_email': (0, 180),  # Example values; adjust as per your needs
# }
ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/5m',  # 5 attempts per 5 minutes
    'confirm_email': '0/180m',  # 0 attempts per 180 minutes (unlimited)
}

# Configurez le backend de console pour les emails
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Les autres paramètres email peuvent rester tels quels
DEFAULT_FROM_EMAIL = 'webmaster@localhost'
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
EMAIL_PORT = 1025  # Ce port est pour un serveur local, n'a pas d'importance ici avec le backend de console

# Définir le chemin absolu du répertoire des fichiers statiques
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# URL de base pour les fichiers statiques
STATIC_URL = '/static/'

# Liste des répertoires où trouver les fichiers statiques
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # BASE_DIR / 'static',   
]

# Définir les fichiers de traduction à utiliser
LANGUAGES = [
    ('fr', 'French'),
]

# Emplacement des fichiers de traduction
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

#API DE CONVERSION MONNAIE
# API Configuration
GETGEOAPI_BASE_URL ="https://api.getgeoapi.com/v2/currency/convert"
GETGEOAPI_KEY = "7a6f676a70c80aa92e0430280d197409aedb985e"

COMPRESS_ROOT = BASE_DIR / 'static'

COMPRESS_ENABLED = True
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

ASGI_APPLICATION = 'DRC_TRANSACTIONS.routing.application'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# STATICFILES_FINDERS = [
#     'compressor.finders.CompressorFinder',
#     # 'django_plotly_dash.finders.DashAssetFinder',
#     # 'django_plotly_dash.finders.DashComponentFinder'
# ]